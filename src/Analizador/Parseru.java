
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package Analizador;

import EDD.AVLUsuarios;
import EDD.ListaIMGs;
import EDD.NodoUsuario;
import EDD.NodoIMG;
import java_cup.runtime.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class Parseru extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return symu.class;
}

  /** Default constructor. */
  @Deprecated
  public Parseru() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public Parseru(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public Parseru(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\015\000\002\002\004\000\002\006\002\000\002\007" +
    "\002\000\002\002\011\000\002\002\002\000\002\005\003" +
    "\000\002\005\003\000\002\010\002\000\002\003\005\000" +
    "\002\003\002\000\002\011\002\000\002\004\006\000\002" +
    "\004\002" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\023\000\010\002\ufffd\004\007\005\004\001\002\000" +
    "\004\007\ufffc\001\002\000\004\002\025\001\002\000\004" +
    "\007\010\001\002\000\004\007\ufffb\001\002\000\006\005" +
    "\000\010\000\001\002\000\006\005\012\010\ufff8\001\002" +
    "\000\006\006\ufffa\010\ufffa\001\002\000\004\010\014\001" +
    "\002\000\010\002\uffff\004\uffff\005\uffff\001\002\000\010" +
    "\002\ufffd\004\007\005\004\001\002\000\004\002\ufffe\001" +
    "\002\000\006\006\021\010\ufff5\001\002\000\004\010\ufff9" +
    "\001\002\000\004\005\022\001\002\000\006\006\ufff7\010" +
    "\ufff7\001\002\000\006\006\021\010\ufff5\001\002\000\004" +
    "\010\ufff6\001\002\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\023\000\006\002\004\005\005\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\006\010\001\001\000\004\003\012\001\001\000" +
    "\004\010\016\001\001\000\002\001\001\000\004\007\014" +
    "\001\001\000\006\002\015\005\005\001\001\000\002\001" +
    "\001\000\004\004\017\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\011\022\001\001\000\004\004\023\001" +
    "\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$Parseru$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$Parseru$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$Parseru$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



AVLUsuarios arbol;
ListaIMGs lista;
NodoUsuario usuario;
NodoIMG aux;
public void insertarEDD(AVLUsuarios arbol, ListaIMGs lista){
    this.arbol = arbol; 
    this.lista = lista;
}

public void syntax_error(Symbol s)
{
System.err.println("El analizador se recupero tras el error\nError en la Línea" + (s.right+1) +" Columna "+(s.left+1)+ ". Identificador "+s.value + " no reconocido." );
}
/**Metodo al que se llama en el momento en que ya no es posible una recuperación de
errores.*/
public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
System.err.println("El analizador No se recupero tras el error\nError en la Línea" + (s.right+1)+ "Columna "+(s.left+1)+". Identificador " +
s.value + " no reconocido.");
}



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$Parseru$actions {
  private final Parseru parser;

  /** Constructor */
  CUP$Parseru$actions(Parseru parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$Parseru$do_action_part00000000(
    int                        CUP$Parseru$act_num,
    java_cup.runtime.lr_parser CUP$Parseru$parser,
    java.util.Stack            CUP$Parseru$stack,
    int                        CUP$Parseru$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$Parseru$result;

      /* select the action based on the action number */
      switch (CUP$Parseru$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$Parseru$stack.elementAt(CUP$Parseru$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$Parseru$stack.elementAt(CUP$Parseru$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$Parseru$stack.elementAt(CUP$Parseru$top-1)).value;
		RESULT = start_val;
              CUP$Parseru$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$Parseru$stack.elementAt(CUP$Parseru$top-1)), ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$Parseru$parser.done_parsing();
          return CUP$Parseru$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // NT$0 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parseru$stack.elementAt(CUP$Parseru$top-1)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parseru$stack.elementAt(CUP$Parseru$top-1)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parseru$stack.elementAt(CUP$Parseru$top-1)).value;
usuario = new NodoUsuario(a);
              CUP$Parseru$result = parser.getSymbolFactory().newSymbol("NT$0",4, ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()), RESULT);
            }
          return CUP$Parseru$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // NT$1 ::= 
            {
              Object RESULT =(Object) ((java_cup.runtime.Symbol) CUP$Parseru$stack.elementAt(CUP$Parseru$top-2)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parseru$stack.elementAt(CUP$Parseru$top-4)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parseru$stack.elementAt(CUP$Parseru$top-4)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parseru$stack.elementAt(CUP$Parseru$top-4)).value;
arbol.insertar(usuario);
              CUP$Parseru$result = parser.getSymbolFactory().newSymbol("NT$1",5, ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()), RESULT);
            }
          return CUP$Parseru$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // INICIO ::= TIPO dp NT$0 CUERPO pc NT$1 INICIO 
            {
              Object RESULT =null;
              // propagate RESULT from NT$1
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parseru$stack.elementAt(CUP$Parseru$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parseru$stack.elementAt(CUP$Parseru$top-6)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parseru$stack.elementAt(CUP$Parseru$top-6)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parseru$stack.elementAt(CUP$Parseru$top-6)).value;

              CUP$Parseru$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Parseru$stack.elementAt(CUP$Parseru$top-6)), ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()), RESULT);
            }
          return CUP$Parseru$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // INICIO ::= 
            {
              Object RESULT =null;

              CUP$Parseru$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()), RESULT);
            }
          return CUP$Parseru$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // TIPO ::= entero 
            {
              String RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parseru$stack.peek()).value;
		RESULT=a;
              CUP$Parseru$result = parser.getSymbolFactory().newSymbol("TIPO",3, ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()), RESULT);
            }
          return CUP$Parseru$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // TIPO ::= id 
            {
              String RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parseru$stack.peek()).value;
		RESULT=a;
              CUP$Parseru$result = parser.getSymbolFactory().newSymbol("TIPO",3, ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()), ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()), RESULT);
            }
          return CUP$Parseru$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // NT$2 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parseru$stack.peek()).value;
if(lista.existe(a)){
                        aux = new NodoIMG(a);
                        aux.setCapas(lista.getNodo(a).getCapas());
                        usuario.getImgs().insertar(aux);
                    }
              CUP$Parseru$result = parser.getSymbolFactory().newSymbol("NT$2",6, ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()), RESULT);
            }
          return CUP$Parseru$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // CUERPO ::= entero NT$2 LISTA 
            {
              Object RESULT =null;
              // propagate RESULT from NT$2
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parseru$stack.elementAt(CUP$Parseru$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parseru$stack.elementAt(CUP$Parseru$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parseru$stack.elementAt(CUP$Parseru$top-2)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parseru$stack.elementAt(CUP$Parseru$top-2)).value;

              CUP$Parseru$result = parser.getSymbolFactory().newSymbol("CUERPO",1, ((java_cup.runtime.Symbol)CUP$Parseru$stack.elementAt(CUP$Parseru$top-2)), ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()), RESULT);
            }
          return CUP$Parseru$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // CUERPO ::= 
            {
              Object RESULT =null;

              CUP$Parseru$result = parser.getSymbolFactory().newSymbol("CUERPO",1, ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()), RESULT);
            }
          return CUP$Parseru$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // NT$3 ::= 
            {
              Object RESULT =null;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parseru$stack.peek()).value;
if(lista.existe(a)){
                        aux = new NodoIMG(a);
                        aux.setCapas(lista.getNodo(a).getCapas());
                        usuario.getImgs().insertar(aux);
                    }
              CUP$Parseru$result = parser.getSymbolFactory().newSymbol("NT$3",7, ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()), RESULT);
            }
          return CUP$Parseru$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // LISTA ::= c entero NT$3 LISTA 
            {
              Object RESULT =null;
              // propagate RESULT from NT$3
                RESULT = (Object) ((java_cup.runtime.Symbol) CUP$Parseru$stack.elementAt(CUP$Parseru$top-1)).value;
		int aleft = ((java_cup.runtime.Symbol)CUP$Parseru$stack.elementAt(CUP$Parseru$top-2)).left;
		int aright = ((java_cup.runtime.Symbol)CUP$Parseru$stack.elementAt(CUP$Parseru$top-2)).right;
		String a = (String)((java_cup.runtime.Symbol) CUP$Parseru$stack.elementAt(CUP$Parseru$top-2)).value;

              CUP$Parseru$result = parser.getSymbolFactory().newSymbol("LISTA",2, ((java_cup.runtime.Symbol)CUP$Parseru$stack.elementAt(CUP$Parseru$top-3)), ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()), RESULT);
            }
          return CUP$Parseru$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // LISTA ::= 
            {
              Object RESULT =null;

              CUP$Parseru$result = parser.getSymbolFactory().newSymbol("LISTA",2, ((java_cup.runtime.Symbol)CUP$Parseru$stack.peek()), RESULT);
            }
          return CUP$Parseru$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$Parseru$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$Parseru$do_action(
    int                        CUP$Parseru$act_num,
    java_cup.runtime.lr_parser CUP$Parseru$parser,
    java.util.Stack            CUP$Parseru$stack,
    int                        CUP$Parseru$top)
    throws java.lang.Exception
    {
              return CUP$Parseru$do_action_part00000000(
                               CUP$Parseru$act_num,
                               CUP$Parseru$parser,
                               CUP$Parseru$stack,
                               CUP$Parseru$top);
    }
}

}
