/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import EDD.ABB_Capas;
import EDD.AVLUsuarios;
import EDD.ListaIMGs;
import EDD.Matriz;
import Analizador.Scannerc;
import Analizador.Parserc;
import Analizador.Parseri;
import Analizador.Parseru;
import Analizador.Scanneri;
import Analizador.Scanneru;
import EDD.ListaIMGU;
import EDD.NodoCapa;
import EDD.NodoIMG;
import EDD.NodoUsuario;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringReader;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author jlrt
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    ABB_Capas capas = new ABB_Capas();
    ListaIMGs listimgs = new ListaIMGs();
    AVLUsuarios usuarios = new AVLUsuarios();
    Matriz m;
    Matriz imagen;

    public Ventana() {
        initComponents();
        /*capas.insertar(new NodoABB(new Matriz(4)));
        capas.insertar(new NodoABB(new Matriz(2)));
        capas.insertar(new NodoABB(new Matriz(6)));
        capas.insertar(new NodoABB(new Matriz(1)));
        capas.insertar(new NodoABB(new Matriz(3)));*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnGraphABBCapas = new javax.swing.JButton();
        btnArbolUsuarios = new javax.swing.JButton();
        btnVerListaImagenes = new javax.swing.JButton();
        btnListaArbolCapas = new javax.swing.JButton();
        graficarMatriz = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtCantidadCapas = new javax.swing.JTextField();
        btnImgPreorden = new javax.swing.JButton();
        btnImgInorden = new javax.swing.JButton();
        btnImgPostorden = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        btnVisualizarImagenG = new javax.swing.JButton();
        btnVerCapa = new javax.swing.JButton();
        btnImgPorUsuario = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtIdUsuario = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        btnAgregarUsuario = new javax.swing.JButton();
        btnEliminarUsuario = new javax.swing.JButton();
        btnModificarUsuario = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        btnAgregarImagen = new javax.swing.JButton();
        btnEliminarImagen = new javax.swing.JButton();
        btnModificarImagen = new javax.swing.JButton();
        btnEliminarImgLista = new javax.swing.JButton();
        lesperar = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jmCargaCapas = new javax.swing.JMenuItem();
        jmCargaImagenes = new javax.swing.JMenuItem();
        jmCargaUsuarios = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Estado de memoria");

        btnGraphABBCapas.setText("Árbol de capas");
        btnGraphABBCapas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGraphABBCapasActionPerformed(evt);
            }
        });

        btnArbolUsuarios.setText("Árbol de usuarios");
        btnArbolUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArbolUsuariosActionPerformed(evt);
            }
        });

        btnVerListaImagenes.setText("Lista de imagenes");
        btnVerListaImagenes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerListaImagenesActionPerformed(evt);
            }
        });

        btnListaArbolCapas.setText("Lista-arbol de capas");
        btnListaArbolCapas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListaArbolCapasActionPerformed(evt);
            }
        });

        graficarMatriz.setText("Estructura matriz");
        graficarMatriz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graficarMatrizActionPerformed(evt);
            }
        });

        jLabel4.setText("Generación de imagenes");

        jLabel2.setText("Por recorrido limitado");

        jLabel3.setText("Cantidad");

        btnImgPreorden.setText("Preorden");
        btnImgPreorden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImgPreordenActionPerformed(evt);
            }
        });

        btnImgInorden.setText("Inorden");
        btnImgInorden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImgInordenActionPerformed(evt);
            }
        });

        btnImgPostorden.setText("Postorden");
        btnImgPostorden.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImgPostordenActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtCantidadCapas)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnImgPreorden, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnImgInorden, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnImgPostorden, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtCantidadCapas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnImgPreorden)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImgInorden)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnImgPostorden)
                .addGap(18, 18, 18))
        );

        btnVisualizarImagenG.setText("Ver imagen");
        btnVisualizarImagenG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarImagenGActionPerformed(evt);
            }
        });

        btnVerCapa.setText("Ver capa");
        btnVerCapa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerCapaActionPerformed(evt);
            }
        });

        btnImgPorUsuario.setText("Ver imagen U");
        btnImgPorUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImgPorUsuarioActionPerformed(evt);
            }
        });

        jLabel5.setText("Por usuario");

        jLabel6.setText("ID usuario");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnVisualizarImagenG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnImgPorUsuario)
                                    .addComponent(btnVerCapa, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdUsuario)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVisualizarImagenG)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVerCapa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnImgPorUsuario)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jLabel7.setText("ABC de usuarios");

        btnAgregarUsuario.setText("Agregar");
        btnAgregarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarUsuarioActionPerformed(evt);
            }
        });

        btnEliminarUsuario.setText("Eliminar");
        btnEliminarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarUsuarioActionPerformed(evt);
            }
        });

        btnModificarUsuario.setText("Modificar");
        btnModificarUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarUsuarioActionPerformed(evt);
            }
        });

        jLabel8.setText("ABC de imagenes");

        btnAgregarImagen.setText("Agregar");
        btnAgregarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarImagenActionPerformed(evt);
            }
        });

        btnEliminarImagen.setText("Eliminar");
        btnEliminarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarImagenActionPerformed(evt);
            }
        });

        btnModificarImagen.setText("Modificar");

        btnEliminarImgLista.setText("Eliminar IMG de la lista");
        btnEliminarImgLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarImgListaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnAgregarUsuario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnEliminarUsuario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnModificarUsuario, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnEliminarImagen, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnModificarImagen, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAgregarImagen, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(btnEliminarImgLista)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarUsuario)
                    .addComponent(btnAgregarImagen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminarUsuario)
                    .addComponent(btnEliminarImagen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificarUsuario)
                    .addComponent(btnModificarImagen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarImgLista)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnListaArbolCapas, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(btnGraphABBCapas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnVerListaImagenes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(graficarMatriz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnArbolUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lesperar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(104, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(10, 10, 10)
                        .addComponent(btnVerListaImagenes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGraphABBCapas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(graficarMatriz)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnListaArbolCapas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnArbolUsuarios))
                    .addComponent(lesperar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenu2.setText("Cargar");

        jmCargaCapas.setText("Capas");
        jmCargaCapas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmCargaCapasActionPerformed(evt);
            }
        });
        jMenu2.add(jmCargaCapas);

        jmCargaImagenes.setText("Imagenes");
        jmCargaImagenes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmCargaImagenesActionPerformed(evt);
            }
        });
        jMenu2.add(jmCargaImagenes);

        jmCargaUsuarios.setText("Usuarios");
        jmCargaUsuarios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmCargaUsuariosActionPerformed(evt);
            }
        });
        jMenu2.add(jmCargaUsuarios);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jmCargaCapasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmCargaCapasActionPerformed
        // TODO add your handling code here:
        JFileChooser jf = new JFileChooser();
        jf.setFileFilter(new FileNameExtensionFilter("Capas", "cap"));
        int a = jf.showOpenDialog(this);
        File archivo = null;
        FileReader fr = null;
        BufferedReader br = null;
        if (JFileChooser.APPROVE_OPTION == a) {
            try {
                archivo = jf.getSelectedFile();
                fr = new FileReader(archivo);
                br = new BufferedReader(fr);
                String linea;
                String cont = "";
                lesperar.setIcon(new ImageIcon("src/Imagenes/reloj.gif"));
                JOptionPane.showMessageDialog(this, "Espere un momento");
                try {
                    while((linea =br.readLine()) != null){
                        cont += linea;
                    }
                    Scannerc scanner = new Scannerc(new BufferedReader(new StringReader(cont)));
                    Parserc sin = new Parserc(scanner);
                    sin.insertABB(capas);
                    sin.parse();
                    //mientras = false;
                    lesperar.setIcon(null);
                    JOptionPane.showMessageDialog(this, "Carga de capas finalizada");
                } catch (Exception e) {
                    System.out.println(e.toString());
                }

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    if (null != fr) {
                        fr.close();
                    }
                } catch (Exception e2) {
                    e2.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jmCargaCapasActionPerformed

    private void jmCargaImagenesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmCargaImagenesActionPerformed
        // TODO add your handling code here:
        JFileChooser jf = new JFileChooser();
        jf.setFileFilter(new FileNameExtensionFilter("Imagenes", "im"));
        int a = jf.showOpenDialog(this);
        File archivo = null;
        FileReader fr = null;
        BufferedReader br = null;
        if (JFileChooser.APPROVE_OPTION == a) {
            try {
                archivo = jf.getSelectedFile();
                fr = new FileReader(archivo);
                br = new BufferedReader(fr);
                String linea;
                String cont = "";
                try {
                    lesperar.setIcon(new ImageIcon("src/Imagenes/reloj.gif"));
                    JOptionPane.showMessageDialog(this, "Espere un momento");
                    while((linea =br.readLine()) != null){
                        cont += linea;
                    }
                    Scanneri scanner = new Scanneri(new BufferedReader(new StringReader(cont)));
                    Parseri sin = new Parseri(scanner);
                    sin.insertarEDD(capas, listimgs);
                    sin.parse();
                    lesperar.setIcon(null);
                    JOptionPane.showMessageDialog(this, "Carga de capas finalizada");
                    /*while ((linea = br.readLine()) != null) {
                        cont = linea.replaceAll("\\s", "");
                        val = cont.split("\\{");
                        imgs = (val[1].replace("}", "")).split(",");
                        NodoIMG nuevo = new NodoIMG(val[0]);
                        for(i = 0; i<imgs.length; i++){
                            mi = Integer.parseInt(imgs[i]);
                            NodoABB abb = capas.getNodo(mi);
                            if(abb!=null) nuevo.getCapas().insertar(new NodoCapa(abb.getM()));
                        }
                        listimgs.insertar(nuevo);
                    }*/
                } catch (Exception e) {
                    System.out.println(e.toString());
                }

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    if (null != fr) {
                        fr.close();
                    }
                } catch (Exception e2) {
                    e2.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jmCargaImagenesActionPerformed

    private void jmCargaUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmCargaUsuariosActionPerformed
        // TODO add your handling code here:
        JFileChooser jf = new JFileChooser();
        jf.setFileFilter(new FileNameExtensionFilter("Usuarios", "usr"));
        int a = jf.showOpenDialog(this);
        File archivo = null;
        FileReader fr = null;
        BufferedReader br = null;
        if (JFileChooser.APPROVE_OPTION == a) {
            try {
                archivo = jf.getSelectedFile();
                fr = new FileReader(archivo);
                br = new BufferedReader(fr);
                String linea;
                String cont = "";
                try {
                    lesperar.setIcon(new ImageIcon("src/Imagenes/reloj.gif"));
                    JOptionPane.showMessageDialog(this, "Espere un momento");
                    while((linea =br.readLine()) != null){
                        cont += linea;
                    }
                    Scanneru scanner = new Scanneru(new BufferedReader(new StringReader(cont)));
                    Parseru sin = new Parseru(scanner);
                    sin.insertarEDD(usuarios, listimgs);
                    sin.parse();
                    lesperar.setIcon(null);
                    JOptionPane.showMessageDialog(this, "Carga de capas finalizada");
                } catch (Exception e) {
                    System.out.println(e.toString());
                }

            } catch (Exception e) {
                e.printStackTrace();
            } finally {
                try {
                    if (null != fr) {
                        fr.close();
                    }
                } catch (Exception e2) {
                    e2.printStackTrace();
                }
            }
        }
    }//GEN-LAST:event_jmCargaUsuariosActionPerformed

    
    private void btnGraphABBCapasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGraphABBCapasActionPerformed
        lesperar.setIcon(new ImageIcon("src/Imagenes/reloj.gif"));
        JOptionPane.showMessageDialog(this, "Espere un momento");
        generarDot(capas.getStringGraphvizEDD(), "Arbol_capas.dot", "Arbol_capas.jpg");
        lesperar.setIcon(null);
    }//GEN-LAST:event_btnGraphABBCapasActionPerformed

    private void btnArbolUsuariosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArbolUsuariosActionPerformed
        lesperar.setIcon(new ImageIcon("src/Imagenes/reloj.gif"));
        JOptionPane.showMessageDialog(this, "Espere un momento");
        generarDot(usuarios.getStringGraphvizEDD(), "Arbol_usuarios.dot", "Arbol_usuarios.jpg");
        lesperar.setIcon(null);
    }//GEN-LAST:event_btnArbolUsuariosActionPerformed

    private void btnVisualizarImagenGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarImagenGActionPerformed
        // TODO add your handling code here:
        String respuesta = JOptionPane.showInputDialog(null, "Ingresa el id de imagen");
        try {
            if(!respuesta.equals("")){
                if(listimgs.existe(respuesta)){
                    NodoCapa aux = listimgs.getNodo(respuesta).getCapas().getFirst();
                    imagen = new Matriz(0);
                    while(aux !=null){
                        imagen.montar(aux.getCapa());
                        aux = aux.getR();
                    }
                    lesperar.setIcon(new ImageIcon("src/Imagenes/reloj.gif"));
                    JOptionPane.showMessageDialog(this, "Espere un momento");
                    generarDot(imagen.getStringPrint(), "imagen"+respuesta+".dot", "imagen"+respuesta+".jpg");
                }else JOptionPane.showMessageDialog(this, "La imagen no existe", "No se encuentra", JOptionPane.WARNING_MESSAGE);
            }else JOptionPane.showMessageDialog(this, "Campo vacio", "Dato incorrecto", JOptionPane.WARNING_MESSAGE);
            lesperar.setIcon(null);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnVisualizarImagenGActionPerformed

    private void btnVerCapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerCapaActionPerformed
        String respuesta = JOptionPane.showInputDialog(null, "Ingresa el numero de capa");
        try {
            int id = Integer.parseInt(respuesta);
            if(capas.existe(id)) {
                lesperar.setIcon(new ImageIcon("src/Imagenes/reloj.gif"));
                JOptionPane.showMessageDialog(this, "Espere un momento");
                generarDot(capas.getNodo(id).getM().getStringPrint(), "capa"+id+".dot", "capa"+id+".jpg");
                lesperar.setIcon(null);
            }
            else JOptionPane.showMessageDialog(this, "No existe", "No existe la capa", JOptionPane.WARNING_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error", "Dato incorrecto", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnVerCapaActionPerformed

    private void graficarMatrizActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graficarMatrizActionPerformed
        String respuesta = JOptionPane.showInputDialog(null, "Ingresa el numero de capa");
        try {
            int id = Integer.parseInt(respuesta);
            if(capas.existe(id)) {
                lesperar.setIcon(new ImageIcon("src/Imagenes/reloj.gif"));
                JOptionPane.showMessageDialog(this, "Espere un momento");
                generarDot(capas.getNodo(id).getM().getStringGraphviz(), "matriz"+id+".dot", "matriz"+id+".jpg");
                lesperar.setIcon(null);
            }
            else JOptionPane.showMessageDialog(this, "No existe", "No existe la capa", JOptionPane.WARNING_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error", "Dato incorrecto", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_graficarMatrizActionPerformed

    private void btnVerListaImagenesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerListaImagenesActionPerformed
        lesperar.setIcon(new ImageIcon("src/Imagenes/reloj.gif"));
        JOptionPane.showMessageDialog(this, "Espere un momento");
        generarDot(listimgs.getStringGraphvizEDD(), "ListaIMG_Capas.dot", "ListaIMG_Capas.jpg");
        lesperar.setIcon(null);
    }//GEN-LAST:event_btnVerListaImagenesActionPerformed

    private void btnListaArbolCapasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListaArbolCapasActionPerformed
        String respuesta = JOptionPane.showInputDialog(null, "Ingresa el id de imagen");
        String cadena="digraph{\n node[shape = box];\n label=\"Imagen y Arbol de capas\";\n";
        if(!"".equals(respuesta)){
            try {
                if(listimgs.existe(respuesta)) {
                    lesperar.setIcon(new ImageIcon("src/Imagenes/reloj.gif"));
                    JOptionPane.showMessageDialog(this, "Espere un momento");
                    cadena += capas.generateEDDWithOutPane();
                    cadena += listimgs.generateEDDWithOutPane(respuesta)+"}";
                    generarDot(cadena, "img_arbol"+respuesta+".dot", "img_arbol"+respuesta+".jpg");
                    lesperar.setIcon(null);
                }
                else JOptionPane.showMessageDialog(this, "No existe", "No existe la imagen", JOptionPane.WARNING_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error", "Dato incorrecto", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnListaArbolCapasActionPerformed

    private void btnImgPreordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImgPreordenActionPerformed
        mostrarOrden(capas.preOrden(), "capaspreorden.dot", "capaspreorden.jpg");
    }//GEN-LAST:event_btnImgPreordenActionPerformed

    private void btnImgInordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImgInordenActionPerformed
        mostrarOrden(capas.inOrden(), "capasinorden.dot", "capasinorden.jpg");
    }//GEN-LAST:event_btnImgInordenActionPerformed

    private void btnImgPostordenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImgPostordenActionPerformed
        mostrarOrden(capas.postOrden(), "capaspostorden.dot", "capaspostorden.jpg");
    }//GEN-LAST:event_btnImgPostordenActionPerformed

    private void btnImgPorUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImgPorUsuarioActionPerformed
        String id = txtIdUsuario.getText();
        if(!id.equals("")){
            if(usuarios.existe(id)){
                try {
                    String respuesta = JOptionPane.showInputDialog(null, "Ingresa el id de imagen");
                    if(!respuesta.equals("")){
                        ListaIMGU listimgs = usuarios.getNodo(id).getImgs();
                        if(listimgs.existe(respuesta)){
                            NodoCapa aux = listimgs.getNodo(respuesta).getCapas().getFirst();
                            imagen = new Matriz(0);
                            while(aux !=null){
                                imagen.montar(aux.getCapa());
                                aux = aux.getR();
                            }
                            lesperar.setIcon(new ImageIcon("src/Imagenes/reloj.gif"));
                            JOptionPane.showMessageDialog(this, "Espere un momento");
                            generarDot(imagen.getStringPrint(), "imagen"+respuesta+".dot", "imagen"+respuesta+".jpg");
                        }else JOptionPane.showMessageDialog(this, "La imagen no existe", "No se encuentra", JOptionPane.WARNING_MESSAGE);
                    }else JOptionPane.showMessageDialog(this, "Campo vacio", "Dato incorrecto", JOptionPane.WARNING_MESSAGE);
                } catch (Exception e) {
                }
                lesperar.setIcon(null);
            }
        }else JOptionPane.showMessageDialog(this, "Campo vacio", "ID incorrecto", JOptionPane.WARNING_MESSAGE);
    }//GEN-LAST:event_btnImgPorUsuarioActionPerformed

    private void btnAgregarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarUsuarioActionPerformed
        try {
            String id = JOptionPane.showInputDialog(null, "Ingresa el nuevo id");
            if(!usuarios.existe(id)){
                usuarios.insertar(new NodoUsuario(id));
                JOptionPane.showMessageDialog(this, "ingresado con éxito");
            }else JOptionPane.showMessageDialog(this, "El usuario ya existe", "Id repetido", JOptionPane.WARNING_MESSAGE);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnAgregarUsuarioActionPerformed

    private void btnEliminarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarUsuarioActionPerformed
        try {
            String id = JOptionPane.showInputDialog(null, "Ingresa el nuevo id");
            if(!id.equals("")){
                if(usuarios.existe(id)){
                    usuarios.eliminar(id);
                    JOptionPane.showMessageDialog(this, "usuario eliminado");
                }else JOptionPane.showMessageDialog(this, "El usuario no existe");
            }else JOptionPane.showMessageDialog(this, "campo vacio");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnEliminarUsuarioActionPerformed

    private void btnModificarUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarUsuarioActionPerformed
        try {
            String id = JOptionPane.showInputDialog(null, "Ingresa el id del usuario");
            String nuevo = JOptionPane.showInputDialog(null, "Ingresa su nuevo id");
            if(!id.equals("")){
                if(usuarios.existe(id)){
                    ListaIMGU auximg =  usuarios.getNodo(id).getImgs();
                    NodoUsuario nuNuevo = new NodoUsuario(nuevo);
                    nuNuevo.setImgs(auximg);
                    usuarios.eliminar(id);
                    usuarios.insertar(nuNuevo);
                    JOptionPane.showMessageDialog(this, "usuario modificado");
                }else JOptionPane.showMessageDialog(this, "El usuario no existe");
            }else JOptionPane.showMessageDialog(this, "campo vacio");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnModificarUsuarioActionPerformed

    private void btnAgregarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarImagenActionPerformed
        String id = JOptionPane.showInputDialog(null, "Ingresa el id del usuario");
        if(usuarios.existe(id)){
            String nuevo = JOptionPane.showInputDialog(null, "Ingrese el id de la nueva imagen");
            if(!listimgs.existe(nuevo)){
                String mcapas = JOptionPane.showInputDialog(null, "Ingresa las capas de la imagen separadas por comas");
                String [] val = mcapas.split(",");
                NodoIMG imgLista = new NodoIMG(nuevo);
                for (String val1 : val) {
                    imgLista.getCapas().insertar(new NodoCapa(this.capas.getNodo(Integer.parseInt(val1)).getM()));
                }
                NodoIMG imgUsuario = new NodoIMG(nuevo);
                imgUsuario.setCapas(imgLista.getCapas());
                listimgs.insertar(imgLista);
                usuarios.getNodo(id).getImgs().insertar(imgUsuario);
                JOptionPane.showMessageDialog(this, "Imagen agregada");
            }else {
                if(!usuarios.getNodo(id).getImgs().existe(nuevo)){
                    NodoIMG miNuevaimagen = new NodoIMG(nuevo);
                    miNuevaimagen.setCapas(listimgs.getNodo(nuevo).getCapas());
                    usuarios.getNodo(id).getImgs().insertar(miNuevaimagen);
                    JOptionPane.showMessageDialog(this, "Imagen agregada");
                }else JOptionPane.showMessageDialog(this, "La imagen ya existe");
            }
        }else JOptionPane.showMessageDialog(this, "El usuario no existe");   
    }//GEN-LAST:event_btnAgregarImagenActionPerformed

    private void btnEliminarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarImagenActionPerformed
        try {
            String id = JOptionPane.showInputDialog(null, "Ingresa el id del usuario");
            if(usuarios.existe(id)){
                String nuevo = JOptionPane.showInputDialog(null, "Ingrese el id de la imagen a eliminar");
                if(usuarios.getNodo(id).getImgs().existe(nuevo)){
                    usuarios.getNodo(id).getImgs().eliminar(nuevo);
                    JOptionPane.showMessageDialog(this, "Imagen eliminada");
                }else JOptionPane.showMessageDialog(this, "La imagen no existe");
            }else JOptionPane.showMessageDialog(this, "El usuario no existe");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnEliminarImagenActionPerformed

    private void btnEliminarImgListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarImgListaActionPerformed
        try {
            String id = JOptionPane.showInputDialog(null, "Ingresa el id de la imagen a eliminar");
            if(listimgs.existe(id)){
                listimgs.eliminar(id);
                usuarios.eliminarImagenes(id);
                JOptionPane.showMessageDialog(this, "Imagen eliminada");
            }else JOptionPane.showMessageDialog(this, "La imagen no existe");
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnEliminarImgListaActionPerformed

    private  void mostrarOrden(String orden, String archivo, String img){
        if(!"".equals(txtCantidadCapas.getText())){
            try {
                int cantidad = Integer.parseInt(txtCantidadCapas.getText());
                if(capas.getRaiz()!=null){
                    imagen = new Matriz(0);
                    String cadena = orden;
                    if(cadena.length()>0){
                        cadena = cadena.substring(0, cadena.length()-1);
                        String [] val = cadena.split(",");
                        int valor;
                        String mostrar ="";
                        if(cantidad<val.length){
                            for(int i = 0; i<cantidad; i++){
                                mostrar +=  val[i]+",";
                            }
                        }else{
                            JOptionPane.showMessageDialog(this, "Mostrar todas las capas", "No hay suficientes capas", JOptionPane.WARNING_MESSAGE);
                            for(int i = 0; i<val.length; i++){
                                mostrar += val[i]+",";
                            }
                        }
                        if(cantidad<val.length){
                            JOptionPane.showMessageDialog(this, mostrar.substring(0, mostrar.length()-1), "Capas a imprimir", JOptionPane.OK_OPTION);
                            for(int i = 0; i<cantidad; i++){
                                valor =  Integer.parseInt(val[i]);
                                imagen.montar(capas.getNodo(valor).getM());
                            }
                        }else{
                            for(int i = 0; i<val.length; i++){
                                valor =  Integer.parseInt(val[i]);
                                imagen.montar(capas.getNodo(valor).getM());
                            }
                        }
                        generarDot(imagen.getStringPrint(), archivo, img);
                    }
                }else JOptionPane.showMessageDialog(this, "No hay capas registradas", "Registro capas", JOptionPane.WARNING_MESSAGE);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Dato invalido", "Error", JOptionPane.WARNING_MESSAGE);
            }
        }else JOptionPane.showMessageDialog(this, "Cantidad capas", "Campo vacio", JOptionPane.WARNING_MESSAGE);
    }
    private void generarDot(String cadena, String nombreArchivo, String nombreImg){
        if(!cadena.equals("")){
            FileWriter fichero = null;
            PrintWriter pw = null;
            try {
                fichero = new FileWriter(nombreArchivo);
                pw = new PrintWriter(fichero);
                pw.print(cadena);
                fichero.close();
                abrirdot(nombreArchivo, nombreImg);
            } catch (Exception e) {
                System.out.println(e.toString());
            }finally {
                try {
                    if (null != fichero) fichero.close();
                } catch (Exception e2) {
                    e2.printStackTrace();
                }
            }
        }
    }
    
    private void abrirdot(String nombreArchivo, String nombreImg) throws IOException, InterruptedException{
        ProcessBuilder pbuilder;
        pbuilder = new ProcessBuilder( "dot", "-Tjpg", nombreArchivo, "-o", nombreImg);
        pbuilder.start();
        pbuilder.redirectErrorStream( true );
        Thread.sleep(10);
        if(System.getProperty("os.name").equals("Linux")){
            pbuilder = new ProcessBuilder( "eog", nombreImg);
            pbuilder.start();
        }else{
            pbuilder = new ProcessBuilder(nombreImg);
            pbuilder.start();
        }
        pbuilder.redirectErrorStream( true );
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarImagen;
    private javax.swing.JButton btnAgregarUsuario;
    private javax.swing.JButton btnArbolUsuarios;
    private javax.swing.JButton btnEliminarImagen;
    private javax.swing.JButton btnEliminarImgLista;
    private javax.swing.JButton btnEliminarUsuario;
    private javax.swing.JButton btnGraphABBCapas;
    private javax.swing.JButton btnImgInorden;
    private javax.swing.JButton btnImgPorUsuario;
    private javax.swing.JButton btnImgPostorden;
    private javax.swing.JButton btnImgPreorden;
    private javax.swing.JButton btnListaArbolCapas;
    private javax.swing.JButton btnModificarImagen;
    private javax.swing.JButton btnModificarUsuario;
    private javax.swing.JButton btnVerCapa;
    private javax.swing.JButton btnVerListaImagenes;
    private javax.swing.JButton btnVisualizarImagenG;
    private javax.swing.JButton graficarMatriz;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JMenuItem jmCargaCapas;
    private javax.swing.JMenuItem jmCargaImagenes;
    private javax.swing.JMenuItem jmCargaUsuarios;
    private javax.swing.JLabel lesperar;
    private javax.swing.JTextField txtCantidadCapas;
    private javax.swing.JTextField txtIdUsuario;
    // End of variables declaration//GEN-END:variables
}
